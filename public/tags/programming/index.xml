<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on Mailund on the Internet</title>
    <link>https://mailund.dk/tags/programming/</link>
    <description>Recent content in programming on Mailund on the Internet</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright &amp;copy; 2020 - Thomas Mailund</copyright>
    <lastBuildDate>Mon, 21 Dec 2020 07:51:59 +0100</lastBuildDate><atom:link href="https://mailund.dk/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Software</title>
      <link>https://mailund.dk/software/</link>
      <pubDate>Sun, 09 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mailund.dk/software/</guid>
      <description>I have written various software over the years. You can get a list of most of it at GitHub. Below is a list of software I have worked on recently (and I promise to still be maintaining).</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 — days 20 and 21</title>
      <link>https://mailund.dk/posts/aoc-2020-8/</link>
      <pubDate>Mon, 21 Dec 2020 07:51:59 +0100</pubDate>
      
      <guid>https://mailund.dk/posts/aoc-2020-8/</guid>
      <description>Day 20: Jurassic Jigsaw Day 20 we get tiles for a puzzle, and we have to work out the puzzle from them. The tiles can be rotated or flipped, but we can connect them by identifying how edges match.</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 — day 19</title>
      <link>https://mailund.dk/posts/aoc-2020-7/</link>
      <pubDate>Sat, 19 Dec 2020 06:51:59 +0100</pubDate>
      
      <guid>https://mailund.dk/posts/aoc-2020-7/</guid>
      <description>I will make this one quick, because I don’t have much time. Today, we are given some rules for what strings should look like, and we are to validate a set of strings and count how many are valid.</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 — days 17-18</title>
      <link>https://mailund.dk/posts/aoc-2020-6/</link>
      <pubDate>Fri, 18 Dec 2020 08:51:59 +0100</pubDate>
      
      <guid>https://mailund.dk/posts/aoc-2020-6/</guid>
      <description>Well, today, my blogging catches up with my Advent of Code hacking. Just in time to fall behind again in the weekend. If that happens, I should be able to write up my weekend solutions on Monday.</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 — days 14-16</title>
      <link>https://mailund.dk/posts/aoc-2020-5/</link>
      <pubDate>Thu, 17 Dec 2020 18:51:39 +0100</pubDate>
      
      <guid>https://mailund.dk/posts/aoc-2020-5/</guid>
      <description>My posts are almost catching up to Advent of Code, which probably means that I will fall behind in the weekend. Quite likely, actually. I probably have time for solving the puzzles, but not writing about them.</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 — days 12-13</title>
      <link>https://mailund.dk/posts/aoc-2020-4/</link>
      <pubDate>Thu, 17 Dec 2020 10:54:39 +0100</pubDate>
      
      <guid>https://mailund.dk/posts/aoc-2020-4/</guid>
      <description>I don’t have a lot of time today, so I will only describe the solutions for two days. I promise that I will catch up to the day the puzzles are released, but it probably won’t be until after the weekend…</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 — days 09–11</title>
      <link>https://mailund.dk/posts/aoc-2020-3/</link>
      <pubDate>Wed, 16 Dec 2020 09:48:39 +0100</pubDate>
      
      <guid>https://mailund.dk/posts/aoc-2020-3/</guid>
      <description>Another day, another post with solutions to 2020 Advent of Code. I am slowly catching up with the actual puzzles, and I will probably get there soon. After that, there will probably be one day per post, except that I expect that the 24th and 25th will be something I leave for after Christmas.</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 — days 06–08</title>
      <link>https://mailund.dk/posts/aoc-2020-2/</link>
      <pubDate>Tue, 15 Dec 2020 06:48:38 +0100</pubDate>
      
      <guid>https://mailund.dk/posts/aoc-2020-2/</guid>
      <description>Ok, now that today’s puzzles are solved, I can go back and look at solutions to the previous days. Today, I will show you my solutions for days six through eight.</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 — days 01-05</title>
      <link>https://mailund.dk/posts/aoc-2020-1/</link>
      <pubDate>Mon, 14 Dec 2020 04:48:38 +0100</pubDate>
      
      <guid>https://mailund.dk/posts/aoc-2020-1/</guid>
      <description>While I wait for comments on the last chapters of my upcoming C-pointers book, I have some time on my hands. And since corona keeps me at home, I have to find something to keep me entertained.</description>
    </item>
    
    <item>
      <title>OOP example in C</title>
      <link>https://mailund.dk/posts/cpointer-oop-example/</link>
      <pubDate>Thu, 12 Nov 2020 05:08:49 +0100</pubDate>
      
      <guid>https://mailund.dk/posts/cpointer-oop-example/</guid>
      <description>I&amp;rsquo;m writing the chapter on function pointers in my C pointers book, and I want a nice example of how you can use them to implement rudimentary object-oriented programming with dynamic dispatch.</description>
    </item>
    
    <item>
      <title>Reference counting lists in C</title>
      <link>https://mailund.dk/posts/c-refcount-list/</link>
      <pubDate>Fri, 30 Oct 2020 06:59:36 +0100</pubDate>
      
      <guid>https://mailund.dk/posts/c-refcount-list/</guid>
      <description>I was playing with reference counting garbage collection last week, for something I want to add to my C pointers book. That chapter is still far in the future, and moving further into the future as the book seems to grow in front of me, but one day I will get to it.</description>
    </item>
    
    <item>
      <title>Generators in C</title>
      <link>https://mailund.dk/posts/c-generators/</link>
      <pubDate>Fri, 23 Nov 2018 14:02:40 +0100</pubDate>
      
      <guid>https://mailund.dk/posts/c-generators/</guid>
      <description>Now that I am almost done with The Joys of Hashing, I am looking at the material I made last year for our Genome-scale Algorithms class. I implemented a toy read mapper as an example for the final project.</description>
    </item>
    
    <item>
      <title>Lazy queues</title>
      <link>https://mailund.dk/posts/lazy-queues/</link>
      <pubDate>Thu, 04 Oct 2018 05:00:20 +0200</pubDate>
      
      <guid>https://mailund.dk/posts/lazy-queues/</guid>
      <description>The purpose of the lazy lists I implemented in my previous post was to build lazy queues. Lazy lists give you constant time concatenation, which can be useful in itself, but I needed it to implement persistent functional queues.</description>
    </item>
    
    <item>
      <title>Lazy lists</title>
      <link>https://mailund.dk/posts/lazy-lists/</link>
      <pubDate>Thu, 04 Oct 2018 05:00:15 +0200</pubDate>
      
      <guid>https://mailund.dk/posts/lazy-lists/</guid>
      <description>I wanted to write about lazy lists and lazy queues today, but I spent most of the day struggling with getting lazy evaluation to work. Finally, I convinced myself that something was broken in R, and I was justified in thinking that; upgrading to the most recent version resolved the issue.</description>
    </item>
    
    <item>
      <title>Functional lists and queues</title>
      <link>https://mailund.dk/posts/functional-lists-and-queues/</link>
      <pubDate>Tue, 02 Oct 2018 05:00:10 +0200</pubDate>
      
      <guid>https://mailund.dk/posts/functional-lists-and-queues/</guid>
      <description>I wanted to write something about function parameters, how these are passed as so-called &amp;ldquo;promises&amp;rdquo;, how these have associated scopes (and the consequences of that), and how they give us lazy evaluation.</description>
    </item>
    
    <item>
      <title>Environments and formulae</title>
      <link>https://mailund.dk/posts/envs-and-formulae/</link>
      <pubDate>Thu, 27 Sep 2018 04:41:19 +0200</pubDate>
      
      <guid>https://mailund.dk/posts/envs-and-formulae/</guid>
      <description>In my two previous posts on non-standard evaluation, Scoping rules and NSE and Overscoping and eval, I explained:
 How R finds the bindings of variables by looking through chains of environments.</description>
    </item>
    
    <item>
      <title>Overscoping and eval</title>
      <link>https://mailund.dk/posts/eval-and-overscoping/</link>
      <pubDate>Sat, 22 Sep 2018 12:23:09 +0200</pubDate>
      
      <guid>https://mailund.dk/posts/eval-and-overscoping/</guid>
      <description>In my previous post I used the lm function for an example of scope rules, but I left a few details out. I didn&amp;rsquo;t want to muddy the example with too many details, so I chose to lie a little.</description>
    </item>
    
    <item>
      <title>Scoping Rules and NSE</title>
      <link>https://mailund.dk/posts/scoping-rules-and-nse/</link>
      <pubDate>Thu, 20 Sep 2018 05:00:15 +0200</pubDate>
      
      <guid>https://mailund.dk/posts/scoping-rules-and-nse/</guid>
      <description>Earlier this week, I wrote some tweets about how you have to be careful about scopes when you do &amp;ldquo;non-standard evaluation&amp;rdquo;. I cover this in both Metaprogramming in R and Domain-Specific Languages in R, but this tweet</description>
    </item>
    
    <item>
      <title>Premarkdown Plugins</title>
      <link>https://mailund.dk/posts/premd-plugins/</link>
      <pubDate>Mon, 10 Sep 2018 14:25:40 +0200</pubDate>
      
      <guid>https://mailund.dk/posts/premd-plugins/</guid>
      <description>I&amp;rsquo;m working on a preprocessor for Markdown documents. I write all my books in Markdown, so this is something I have wanted to do for a while, to scratch a few itches I have.</description>
    </item>
    
  </channel>
</rss>
