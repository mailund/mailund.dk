<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c on Mailund on the Internet</title>
    <link>https://mailund.dk/tags/c/</link>
    <description>Recent content in c on Mailund on the Internet</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright &amp;copy; 2020 - Thomas Mailund</copyright>
    <lastBuildDate>Wed, 15 Sep 2021 07:59:33 +0200</lastBuildDate>
    
	<atom:link href="https://mailund.dk/tags/c/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>&#39;Witness&#39; arrays</title>
      <link>https://mailund.dk/posts/witness-array/</link>
      <pubDate>Wed, 15 Sep 2021 07:59:33 +0200</pubDate>
      
      <guid>https://mailund.dk/posts/witness-array/</guid>
      <description>The other day I was reminded of an exercises we got first or second year when I studied computer science. It is a cool little trick, that I&amp;rsquo;ve never seen outside of that exercise, so I thought I&amp;rsquo;d share it.</description>
    </item>
    
    <item>
      <title>Starting Up Exercises: Burrows-Wheeler Transform</title>
      <link>https://mailund.dk/posts/starting-up-exercises-bwt/</link>
      <pubDate>Fri, 05 Feb 2021 10:19:43 +0100</pubDate>
      
      <guid>https://mailund.dk/posts/starting-up-exercises-bwt/</guid>
      <description>I am supervising some projects this spring, on algorithms for read-mapping. It&amp;rsquo;s different projects that all involve implementing a working, but primitive, read mapper.
There is nothing new there, I have a class every year where we do that, but now it is individual projects.</description>
    </item>
    
    <item>
      <title>Book update: Pointers in C and and Computational Thinking</title>
      <link>https://mailund.dk/posts/book-update-cptr-ct/</link>
      <pubDate>Tue, 12 Jan 2021 08:27:09 +0100</pubDate>
      
      <guid>https://mailund.dk/posts/book-update-cptr-ct/</guid>
      <description>So, my C pointers book apparently has a cover now. Before you complain, I don&amp;rsquo;t write the titles (although I don&amp;rsquo;t disagree with the title for this book), nor the subtitles (where I do for this one).</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 — days 09–11</title>
      <link>https://mailund.dk/posts/aoc-2020-3/</link>
      <pubDate>Wed, 16 Dec 2020 09:48:39 +0100</pubDate>
      
      <guid>https://mailund.dk/posts/aoc-2020-3/</guid>
      <description>Another day, another post with solutions to 2020 Advent of Code. I am slowly catching up with the actual puzzles, and I will probably get there soon. After that, there will probably be one day per post, except that I expect that the 24th and 25th will be something I leave for after Christmas.</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 — days 06–08</title>
      <link>https://mailund.dk/posts/aoc-2020-2/</link>
      <pubDate>Tue, 15 Dec 2020 06:48:38 +0100</pubDate>
      
      <guid>https://mailund.dk/posts/aoc-2020-2/</guid>
      <description>Ok, now that today’s puzzles are solved, I can go back and look at solutions to the previous days. Today, I will show you my solutions for days six through eight.</description>
    </item>
    
    <item>
      <title>OOP example in C</title>
      <link>https://mailund.dk/posts/cpointer-oop-example/</link>
      <pubDate>Thu, 12 Nov 2020 05:08:49 +0100</pubDate>
      
      <guid>https://mailund.dk/posts/cpointer-oop-example/</guid>
      <description>I&amp;rsquo;m writing the chapter on function pointers in my C pointers book, and I want a nice example of how you can use them to implement rudimentary object-oriented programming with dynamic dispatch.</description>
    </item>
    
    <item>
      <title>Reference counting lists in C</title>
      <link>https://mailund.dk/posts/c-refcount-list/</link>
      <pubDate>Fri, 30 Oct 2020 06:59:36 +0100</pubDate>
      
      <guid>https://mailund.dk/posts/c-refcount-list/</guid>
      <description>I was playing with reference counting garbage collection last week, for something I want to add to my C pointers book. That chapter is still far in the future, and moving further into the future as the book seems to grow in front of me, but one day I will get to it.</description>
    </item>
    
    <item>
      <title>Joys of Hashing</title>
      <link>https://mailund.dk/posts/joys-of-hashing/</link>
      <pubDate>Mon, 08 Apr 2019 14:34:13 +0200</pubDate>
      
      <guid>https://mailund.dk/posts/joys-of-hashing/</guid>
      <description>I forgot to post about it when The Joys of Hashing came out, but it is never too late to blow my own horn. It is out and you should get it.</description>
    </item>
    
    <item>
      <title>Generators in C</title>
      <link>https://mailund.dk/posts/c-generators/</link>
      <pubDate>Fri, 23 Nov 2018 14:02:40 +0100</pubDate>
      
      <guid>https://mailund.dk/posts/c-generators/</guid>
      <description>Now that I am almost done with The Joys of Hashing, I am looking at the material I made last year for our Genome-scale Algorithms class. I implemented a toy read mapper as an example for the final project.</description>
    </item>
    
  </channel>
</rss>